play.application.loader = com.ubi.order.impl.OrderServiceLoader

redis {
  instance {
    host = "localhost"
    password = ""
    port = 6379
    database = 3
    host = ${?REDIS_INSTANCE_HOST}
    password = ${?REDIS_INSTANCE_PASSWORD}
  }
}

lagom.persistence.jdbc.create-tables.auto = true
db {
  default {
    driver = "com.mysql.cj.jdbc.Driver"
    url = "jdbc:mysql://localhost:3306/ubi_ccat"
    username = "root"
    password = "Liaoliang@1984"
    url = ${?SLICK_DB_URL}
    username = ${?SLICK_DB_USER}
    password = ${?SLICK_DB_PASSWORD}
  }
}
jdbc-defaults.slick.profile = "slick.jdbc.MySQLProfile$"


akka.actor {
  serialization-bindings {
    # Commands won't use play-json but Akka's jackson support.
    # See https://doc.akka.io/docs/akka/2.6/serialization-jackson.html
    "com.stey.connect.qtels.impl.persistence.cassandra.ReservationAggregate$CommandSerializable" = jackson-json
  }
}

stey.connect {
  qtels {
    gateway: "http://116.90.84.47:9090/qtels-local/gateway"
    api-key: steyuatkey
    api-secret: steyuatsecret
    gateway: ${?STEY_CONNECT_QTELS_GATEWAY}
    api-key: ${?STEY_CONNECT_QTELS_API_KEY}
    api-secret: ${?STEY_CONNECT_QTELS_API_SECRET}
    monthly-reservation-rate-codes: "LS"
    monthly-reservation-rate-codes: ${?STEY_CONNECT_QTELS_MONTHLY_RESERVATION_RATE_CODES}
  }
}
